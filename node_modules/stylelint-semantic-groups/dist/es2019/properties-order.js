import { animations, border, box, clip, elementProperties, misc, scss, style, typography, visuals } from './groups';
const createGroup = (groupName, properties) => ({
    emptyLineBefore: 'always',
    noEmptyLineBetween: true,
    groupName,
    properties,
});
const ruleIsArray = (rules) => Array.isArray(rules[0]);
const mergeGroups = (groups) => {
    const groupRules = [];
    // eslint-disable-next-line no-restricted-syntax
    for (const [groupName, rules] of Object.entries(groups)) {
        if (ruleIsArray(rules)) {
            groupRules.push(...rules.map((props) => createGroup(groupName, props)));
        }
        else {
            groupRules.push(createGroup(groupName, rules));
        }
    }
    return groupRules;
};
export const propertyOrdering = [
    mergeGroups({
        scss,
        elementProperties,
        box,
        typography,
        border,
        visuals,
        style,
        clip,
        misc,
        animations,
    }),
    // {"unspecified": "bottomAlphabetical"}
];
